spring:
  jpa:
    hibernate:
      ddl-auto: validate # create update create-update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        default_batch_fetch_size: 500
    database: mysql
    open-in-view: false
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB
  datasource:
    url: ${RDS_URL}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH_GOOGLE_ID}
            client-secret: ${OAUTH_GOOGLE_PASSWORD}
            scope:
              - email
              - profile
          kakao:
            client-id: ${OAUTH_KAKAO_ID}
            redirect-uri: ${OAUTH_KAKAO_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_image
              - account_email
        provider:
          kakao:
            authorization-uri: ${PROVIDER_AUTH_URI}
            token-uri: ${PROVIDER_TOKEN_URI}
            user-info-uri: ${PROVIDER_INFO_URI}
            user-name-attribute: id
            
  mail:
    host: ${MAIL_HOST}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    port: ${MAIL_PORT}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com
            protocols: TLSv1.2
logging:
  level:
    org.springframework.web.client: debug
    org.hibernate.sql: debug
    org.hibernate.type: trace
    org.springframework.security: debug

server:
  servlet:
    encoding:
      charset: UTF-8
      force: true

jwt:
  secretKey: ${SECURITY_SECRET_KEY}
  refreshKey: ${SECURITY_REFRESH_KEY}

cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY}
      secretKey: ${AWS_SECRET_KEY}
    s3:
      bucket: ${BUCKET_NAME}
      dir: image
    region:
      static: ap-northeast-2
    stack:
      auto: false

webdriver:
  chrome:
    location: /root/chromedriver

discord:
  url: ${DISCORD_URL}